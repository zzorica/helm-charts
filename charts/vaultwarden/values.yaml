# Default values for vaultwarden.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: vaultwarden/server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Strategy for Deployment updates. Use recreate if you use PVCs as it will need first to be detached from the old pod and attached to the new one.
deploymentStrategy:
  type: RollingUpdate # RollingUpdate or Recreate
  rollingUpdate:
    maxSurge: 1 # Relative or absolute number of pods that can be created above desired
    maxUnavailable: 0 # Relative or absolute number of pods that can be unavailable

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

admin:
  # Enable admin portal.
  enabled: true
  # Disabling the admin token will make the admin portal accessible to anyone, use carefully: https://github.com/dani-garcia/vaultwarden/wiki/Disable-admin-token
  disableAdminToken: false
  ## Token for admin login, will be generated if not defined. https://github.com/dani-garcia/vaultwarden/wiki/Enabling-admin-page
  # token:
  ## Use existing secret for the admin token. Key is 'admin-token'.
  # existingSecret:

smtp:
  enabled: false
  # SMTP hostname, required if SMTP is enabled.
  host: ""
  # SMTP sender e-mail address, required if SMTP is enabled.
  from: ""
  ## SMTP sender name, defaults to 'Vaultwarden'.
  # fromName: ""
  ## Enable a secure connection. Default is "starttls" (Explicit - ports 587 or 25), "force_tls" (Implicit - port 465) or "off", no encryption (port 25).
  # smtp_security: starttls
  ## SMTP port. Defaults to 25 without SSL, 587 with SSL.
  # port: 587
  ## SMTP Authentication Mechanisms. Comma-separated options: 'Plain', 'Login' and 'Xoauth2'. Defaults to 'Plain'.
  # authMechanism: Plain
  ## SMTP timeout.
  # timeout: 15
  ## SMTP username.
  # user: ""
  ## SMTP password. Required is user is specified, ignored if no user provided.
  # password: ""
  ## Use existing secret for SMTP authentication. Keys are 'smtp-user' and 'smtp-password'.
  # existingSecret:

env:
  # DOMAIN: https://vw.domain.tld:8443
  # SIGNUPS_ALLOWED: true

envFromSecret: {}

persistence:
  enabled: false
  annotations: {}
  ## vaultwarden data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp3 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  accessMode: ReadWriteOnce
  size: 2Gi

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
